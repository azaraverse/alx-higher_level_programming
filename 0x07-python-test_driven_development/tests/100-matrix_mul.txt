==============
100-matrix_mul
==============

How to use this module
======================

# import the module into a .py file
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

# try with valid inputs
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
[[58, 64], [139, 154]]

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10], [11, 12, 13]])
Traceback (most recent call last):
        ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 'four']], [[5, 6], [7, 8]])
Traceback (most recent call last):
        ...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 'eight']])
Traceback (most recent call last):
        ...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [5, 6])
Traceback (most recent call last):
        ...
TypeError: m_b must be a list of lists

>>> matrix_mul([1, 2], [[5, 6], [7, 8]])
Traceback (most recent call last):
        ...
TypeError: m_a must be a list of lists

>>> matrix_mul(1, [[5, 6], [7, 8]])
Traceback (most recent call last):
        ...
TypeError: m_a must be a list

>>> matrix_mul([[1, 2]], 3)
Traceback (most recent call last):
        ...
TypeError: m_b must be a list

>>> matrix_mul([[]], [[5, 6], [7, 8]])
Traceback (most recent call last):
        ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
        ...
ValueError: m_b can't be empty

>>> matrix_mul([[1, 2, 3], [4, 5]], [[6, 7], [8, 9], [10, 11]])
Traceback (most recent call last):
   ...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11], [12, 13]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size
