===============
7-base_geometry
===============

How to use this module...
=========================

# import module into a .py file
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator('my_int', 15)

>>> bg.integer_validator('None', None)
Traceback (most recent call last):
    ...
TypeError: None must be an integer

>>> bg.integer_validator('__gt__ 0', 0)
Traceback (most recent call last):
    ...
ValueError: __gt__ 0 must be greater than 0

>>> bg.integer_validator('negative', -10)
Traceback (most recent call last):
    ...
ValueError: negative must be greater than 0

>>> bg.integer_validator('None', 'None')
Traceback (most recent call last):
    ...
TypeError: None must be an integer

>>> bg.integer_validator('float', 10.5)
Traceback (most recent call last):
    ...
TypeError: float must be an integer

>>> bg.integer_validator('neg float', -10.5)
Traceback (most recent call last):
    ...
TypeError: neg float must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator('one arg')
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(value=10)
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'name'
